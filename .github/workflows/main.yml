name: Vue.js CI/CD Workflow

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发
  pull_request:
    branches:
      - main  # 当有 Pull Request 到 main 分支时触发

jobs:
  build:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境

    steps:
      # 1. 检出代码库
      - name: 检出代码库
        uses: actions/checkout@v3

      # 2. 设置 Node.js 环境
      - name: 设置 Node.js 环境
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '16'
          check-latest: true

      # 3. 安装依赖
      - name: 安装依赖
        run: yarn install
        working-directory: ./myproject

      # 4. 构建项目
      - name: 构建 Vue 项目
        run: yarn build
        working-directory: ./myproject

      # 5. 推送构建产物到另一个 GitHub 仓库
      - name: 推送构建产物到目标仓库
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # 克隆目标仓库
          git clone https://x-access-token:${{ secrets.TARGET_REPO_TOKEN }}name: Vue.js CI/CD Workflow

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发
  pull_request:
    branches:
      - main  # 当有 Pull Request 到 main 分支时触发

jobs:
  build:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境

    steps:
      # 1. 检出代码库
      - name: 检出代码库
        uses: actions/checkout@v3

      # 2. 设置 Node.js 环境
      - name: 设置 Node.js 环境
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '16'
          check-latest: true

      # 3. 安装依赖
      - name: 安装依赖
        run: yarn install
        working-directory: ./myproject

      # 4. 构建项目
      - name: 构建 Vue 项目
        run: yarn build
        working-directory: ./myproject

      # 5. 推送构建产物到另一个 GitHub 仓库
      - name: 推送构建产物到目标仓库
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # 克隆目标仓库
          git clone https://x-access-token:${{ secrets.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 }}@github.com/huanxueshengmou/git-action-token-test.git target-repo
          
          # 将构建产物复制到目标仓库
          cp -r myproject/dist/* target-repo/
          
          # 提交并推送构建产物
          cd target-repo
          git add .
          git commit -m "Deploy build via GitHub Actions"
          git push
        env:
          TARGET_REPO_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}

          
          # 将构建产物复制到目标仓库
          cp -r myproject/dist/* target-repo/
          
          # 提交并推送构建产物
          cd target-repo
          git add .
          git commit -m "Deploy build via GitHub Actions"
          git push
        env:
          TARGET_REPO_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}
